package com.ict.khj.ajax;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class AjaxController {
	
	@RequestMapping(value = "event_ajax_ok.do", produces="application/json; charset=utf-8")
	@ResponseBody
	public String eventData() {
		BufferedReader rd = null;
		HttpURLConnection conn = null;
		try {
			StringBuilder urlBuilder = new StringBuilder("http://api.data.go.kr/openapi/tn_pubr_public_pblprfr_event_info_api");
			urlBuilder.append("?" + URLEncoder.encode("serviceKey", "UTF-8") + "=MW2gVDhFfj6KBl0Br%2FPZKp8tnl8L1ZUPte2qEMWmv09R6VL1dSg8qlElVQMlWCIpj4AWoKdndkUblLiCAagNpA%3D%3D");
			urlBuilder.append("&" + URLEncoder.encode("returnType","UTF-8") + "=" + URLEncoder.encode("json", "UTF-8")); /*xml 또는 json*/
	        urlBuilder.append("&" + URLEncoder.encode("numOfRows","UTF-8") + "=" + URLEncoder.encode("100", "UTF-8")); /*한 페이지 결과 수*/
	        urlBuilder.append("&" + URLEncoder.encode("pageNo","UTF-8") + "=" + URLEncoder.encode("1", "UTF-8")); /*페이지번호*/
	        urlBuilder.append("&" + URLEncoder.encode("ver","UTF-8") + "=" + URLEncoder.encode("1.0", "UTF-8")); /*버전별 상세 결과 참고*/
	        URL url = new URL(urlBuilder.toString());
	        conn = (HttpURLConnection) url.openConnection();
	        
	        conn.setRequestMethod("GET");
	        
	        if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
	        	rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
	        }else {
	        	rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
	        }
	        StringBuilder sb = new StringBuilder();
	        String line;
	        while((line = rd.readLine()) != null) {
	        	sb.append(line);
	        }
	        System.out.println(sb.toString());
	        return sb.toString();
	        
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {
				rd.close();
				conn.disconnect();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return null;
	}
	
}




















